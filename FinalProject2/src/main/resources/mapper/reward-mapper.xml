<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="reward">

	<!-- 리워드 카테고리 부르는거 -->
	<select id="selectRewardCategoryMap" resultType="Map">
		SELECT REWARD_CATEGORY_NO AS categoryNo, REWARD_CATEGORY_NAME as categoryName FROM TB_REWARD_CATEGORY
	</select>
	
	
	<select id="selectNextRewardNo" resultType="int">
		SELECT SEQ_REWARD_NO.NEXTVAL FROM DUAL
	</select>
			
			
	<!-- 프로젝트 최초 생성하는 쿼리 -->
	<insert id="insertProjectReward" parameterType="Map">
		INSERT INTO TB_REWARD(REWARD_NO, USER_NO,REWARD_CATEGORY_NO ,REWARD_ENROLL_DATE, REWARD_LAST_MODIFY_DATE,REWARD_STATE) VALUES(#{rewardNo},#{userNo},#{categoryNo} ,SYSDATE, SYSDATE, 0) 
	</insert>
	
	
	<!-- 리워드 아이템 insert -->
	<insert id="insertRewardItem" parameterType="com.spring.test.reward.model.vo.RewardItem">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			SELECT SEQ_REWARD_ITEM_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_REWARD_ITEM VALUES(#{no},#{rewardNo},#{index},#{name},#{introduce},#{needAddress},#{deliveryPrice},#{maxNum},#{remainNum},#{deliveryStart},#{deliveryEnd},#{price})
	</insert>
	
	<!-- 지워질 예정 -->
	<insert id="insertRewardItemSelectOptionList" parameterType="com.spring.test.reward.model.vo.RewardItemSelectOption">
		INSERT INTO TB_REWARD_SELECT_OPTION VALUES
		<foreach collection="list" item="item">
			(SEQ_SELECT_OPTION_NO.NEXTVAL,#{item.rewardItemNo},#{item.rewardNo},#{item.content})
		</foreach>
	</insert>
	
	<!-- 리워드 아이템 옵션 insert -->
	<insert id="insertRewardItemSelectOption" parameterType="com.spring.test.reward.model.vo.RewardItemSelectOption">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			SELECT SEQ_SELECT_OPTION_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_REWARD_SELECT_OPTION VALUES(#{no},#{rewardItemNo},#{rewardNo},#{content})
	</insert>
	
	<update id="updateRewardItemSelectOption" parameterType="com.spring.test.reward.model.vo.RewardItemSelectOption">
		UPDATE TB_REWARD_SELECT_OPTION SET REWARD_ITEM_SEL_OPTION_CONTENT = #{content} WHERE REWARD_ITEM_SEL_OPTION_NO = #{no}
	</update>
	
	<delete id="deleteRewardItemSelectOption" parameterType="java.util.List">
		DELETE FROM TB_REWARD_SELECT_OPTION WHERE REWARD_ITEM_SEL_OPTION_NO NOT IN(
		<foreach collection="list" item="selectOption" separator=",">
			#{selectOption.no}
		</foreach>
		)
	</delete>
	
	
	<!-- 지워질 예쩡 -->
	<insert id="insertRewardItemInputOptionList" parameterType="com.spring.test.reward.model.vo.RewardItemInputOption">
		INSERT INTO TB_REWARD_INPUT_OPTION VALUES
		<foreach collection="list" item="item">
			(SEQ_INPUT_OPTION_NO.NEXTVAL,#{item.rewardItemNo},#{item.rewardNo},#{item.content})
		</foreach>
	</insert>
	
	<!-- 리워드 아이템 입력형 옵션 insert -->
	<insert id="insertRewardItemInputOption" parameterType="com.spring.test.reward.model.vo.RewardItemInputOption">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			SELECT SEQ_INPUT_OPTION_NO.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO TB_REWARD_INPUT_OPTION VALUES(#{no},#{rewardItemNo},#{rewardNo},#{content})
	</insert>
	
	<update id="updateRewardItemInputOption" parameterType="com.spring.test.reward.model.vo.RewardItemInputOption">
		UPDATE TB_REWARD_INPUT_OPTION SET REWARD_ITEM_IN_OPTION_CONTENT=#{content} WHERE REWARD_ITEM_IN_OPTION_NO = #{no}
	</update>
	
	<delete id="deleteRewardItemInputOption" parameterType="java.util.List">
		DELETE FROM TB_REWARD_INPUT_OPTION WHERE REWARD_ITEM_IN_OPTION_NO NOT IN(
		<foreach collection="list" item="inputOption" separator=",">
			#{inputOption.no}
		</foreach>
		)
	</delete>
	

	<select id="selectRewardRewardNo" parameterType="int">
	
	</select>
	
	<!-- 리워드 중간저장용 쿼리 -->
	<update id="updateProjectRewardBasicInfo" parameterType="Map">
		UPDATE TB_REWARD SET  REWARD_LAST_MODIFY_DATE=SYSDATE
		
		<if test="rewardCategory != null and rewardCategory != ''">
			,REWARD_CATEGORY_NO = #{rewardCategory}
		</if>
		
		<if test="rewardTitle != null and rewardTitle != ''">
			,REWARD_NAME = #{rewardTitle}
		</if>
		
		<if test="rewardShortTitle != null and rewardShortTitle != ''">
			,REWARD_SHORT_NAME = #{rewardShortTitle}
		</if>
		
		<if test="rewardDeadline != null and rewardDeadline != ''">
			,REWARD_DEADLINE = #{rewardDeadline}
		</if>
		
		<if test="rewardSynopsis != null and rewardSynopsis != ''">
			,REWARD_SYNOPSIS = #{rewardSynopsis}
		</if>
		
		<if test="rewardGoal != null and rewardGoal != ''">
			,REWARD_GOAL = #{rewardGoal}
		</if>
		
		<if test="rewardRepresentPhoto != null and rewardRepresentPhoto != ''">
			,REWARD_REPRESENT_IMAGE = #{rewardRepresentPhoto}
		</if>
		
		<if test="rewardMCName != null and rewardMCName != '' ">
			,REWARD_MC_NAME = #{rewardMCName}
		</if>
		
		<if test="rewardMCIntroduce != null and rewardMCIntroduce != ''">
			,REWARD_MC_INTRODUCE = #{rewardMCIntroduce}
		</if>
		
		<if test="rewardMCUrl1 != null and rewardMCUrl1 != ''">
			,REWARD_MC_URL1 = #{rewardMCUrl1}
		</if>
		
		<if test="rewardMCUrl2 != null and rewardMCUrl2 != ''">
			,REWARD_MC_URL2 = #{rewardMCUrl2}
		</if>
		
		<if test="rewardMCUrl3 != null and rewardMCUrl3 != ''">
			,REWARD_MC_URL3 = #{rewardMCUrl3}
		</if>
		
		<if test="rewardMCPhoto != null and rewardMCPhoto != ''">
			,REWARD_MC_PROFILEPHOTO = #{rewardMCPhoto}
		</if>
		
		<if test="rewardPreOpen != null and rewardPreOpen != ''">
			,REWARD_PRE_OPEN = #{rewardPreOpen}
		</if>
		
		<if test="rewardBankBookPhoto != null and rewardBankBookPhoto != ''">
			,REWARD_BANKBOOK_PHOTO = #{rewardBankBookPhoto}
		</if>
		WHERE REWARD_NO = #{rewardNo}
	</update>

	<select id="selectRewardList" parameterType="Map" resultType="Map">
		SELECT C.*,REWARD_DEADLINE-TRUNC(SYSDATE) as REWARD_REMAIN_DATE, NVL((SELECT SUM(B.REWARD_ITEM_PRICE+A.REWARD_SUPPORT_ADD_DONATION) FROM TB_REWARD_SUPPORT A INNER JOIN TB_REWARD_ITEM B USING (REWARD_ITEM_NO) WHERE C.REWARD_NO=B.REWARD_NO GROUP BY B.REWARD_NO),0) AS REWARD_PRESENT_COLLECTION,NVL(FLOOR(((SELECT SUM(B.REWARD_ITEM_PRICE+A.REWARD_SUPPORT_ADD_DONATION) FROM TB_REWARD_SUPPORT A INNER JOIN TB_REWARD_ITEM B USING (REWARD_ITEM_NO) WHERE C.REWARD_NO=B.REWARD_NO AND B.REWARD_ITEM_PRICE IS NOT NULL AND A.REWARD_SUPPORT_ADD_DONATION IS NOT NULL GROUP BY B.REWARD_NO)/REWARD_GOAL)*100),0) AS REWARD_ACHIEVEMENT_PERSENT, D.REWARD_CATEGORY_NAME 
		FROM TB_REWARD C INNER JOIN TB_REWARD_CATEGORY D ON C.REWARD_CATEGORY_NO=D.REWARD_CATEGORY_NO
		WHERE REWARD_STATE=#{rewardState}
		<if test="categoryNum!=0">
			AND C.REWARD_CATEGORY_NO=#{categoryNum}
		</if>
		<choose>
		<when test="listFilter==1">
			ORDER BY REWARD_ENROLL_DATE DESC
		</when>
		<when test="listFilter==2">
			ORDER BY REWARD_REMAIN_DATE ASC
		</when>
		<when test="listFilter==3">
			ORDER BY REWARD_GOAL DESC
		</when>
		<when test="listFilter==4">
			ORDER BY REWARD_ACHIEVEMENT_PERSENT DESC
		</when>
		<when test="listFilter==5">
			ORDER BY REWARD_PRESENT_COLLECTION DESC
		</when>
		</choose>
	</select>
	
	<select id="selectReward" parameterType="int" resultMap="reward">
		SELECT * FROM TB_REWARD WHERE REWARD_NO = #{rewardNo}
	</select>
	
	<select id="selectRewardItem" parameterType="int" resultMap="rewardItem">
		SELECT * FROM TB_REWARD_ITEM WHERE REWARD_NO = #{rewardNo}
	</select>
	
	<select id="selectRewardSelectOption" parameterType="int" resultMap="rewardItemSelectOption">
		SELECT * FROM TB_REWARD_SELECT_OPTION WHERE REWARD_ITEM_NO = #{rewardItemNo}
	</select>
	
	<select id="selectRewardInputOption" parameterType="int" resultMap="rewardItemInputOption">
		SELECT * FROM TB_REWARD_INPUT_OPTION WHERE REWARD_ITEM_NO = #{rewardItemNo}
	</select>
	
	<select id="rewardRankList" resultType="Map">
		SELECT C.*, NVL(FLOOR(((SELECT SUM(B.REWARD_ITEM_PRICE+A.REWARD_SUPPORT_ADD_DONATION) FROM TB_REWARD_SUPPORT A INNER JOIN TB_REWARD_ITEM B USING (REWARD_ITEM_NO) WHERE C.REWARD_NO=B.REWARD_NO AND B.REWARD_ITEM_PRICE IS NOT NULL AND A.REWARD_SUPPORT_ADD_DONATION IS NOT NULL GROUP BY B.REWARD_NO)/REWARD_GOAL)*100),0) AS REWARD_ACHIEVEMENT_PERSENT
		FROM TB_REWARD C  
		WHERE REWARD_STATE=4 ORDER BY REWARD_ACHIEVEMENT_PERSENT DESC
	</select>
	
	<select id="open_schedule_rewardRankList" resultType="Map">
		SELECT A.*,B.LIKE_COUNT FROM TB_REWARD A INNER JOIN (SELECT REWARD_NO,COUNT(*) AS LIKE_COUNT FROM TB_REWARD_LIKE GROUP BY REWARD_NO) B ON A.REWARD_NO=B.REWARD_NO WHERE REWARD_STATE=3 ORDER BY LIKE_COUNT DESC
	</select>
	
	<select id="newest_open_schedule_rewardList" resultType="Map">
		SELECT * FROM TB_REWARD WHERE REWARD_STATE=3 ORDER BY REWARD_ENROLL_DATE DESC
	</select>
	
	<select id="deadline_approaching_rewardList" resultType="Map">
		SELECT C.*,REWARD_DEADLINE-TRUNC(SYSDATE) as REWARD_REMAIN_DATE,
		NVL((SELECT SUM(B.REWARD_ITEM_PRICE+A.REWARD_SUPPORT_ADD_DONATION) FROM TB_REWARD_SUPPORT A INNER JOIN TB_REWARD_ITEM B USING (REWARD_ITEM_NO) WHERE C.REWARD_NO=B.REWARD_NO GROUP BY B.REWARD_NO),0) AS REWARD_PRESENT_COLLECTION,
		NVL(FLOOR(((SELECT SUM(B.REWARD_ITEM_PRICE+A.REWARD_SUPPORT_ADD_DONATION) FROM TB_REWARD_SUPPORT A INNER JOIN TB_REWARD_ITEM B USING (REWARD_ITEM_NO) WHERE C.REWARD_NO=B.REWARD_NO AND B.REWARD_ITEM_PRICE IS NOT NULL AND A.REWARD_SUPPORT_ADD_DONATION IS NOT NULL GROUP BY B.REWARD_NO)/REWARD_GOAL)*100),0) AS REWARD_ACHIEVEMENT_PERSENT,
		D.REWARD_CATEGORY_NAME 
		FROM TB_REWARD C INNER JOIN TB_REWARD_CATEGORY D ON C.REWARD_CATEGORY_NO=D.REWARD_CATEGORY_NO
		WHERE REWARD_STATE=4 ORDER BY REWARD_REMAIN_DATE ASC
	</select>
	
	<select id="new_rewardList" resultType="Map">
		SELECT C.*,REWARD_DEADLINE-TRUNC(SYSDATE) as REWARD_REMAIN_DATE,
		NVL((SELECT SUM(B.REWARD_ITEM_PRICE+A.REWARD_SUPPORT_ADD_DONATION) FROM TB_REWARD_SUPPORT A INNER JOIN TB_REWARD_ITEM B USING (REWARD_ITEM_NO) WHERE C.REWARD_NO=B.REWARD_NO GROUP BY B.REWARD_NO),0) AS REWARD_PRESENT_COLLECTION,
		NVL(FLOOR(((SELECT SUM(B.REWARD_ITEM_PRICE+A.REWARD_SUPPORT_ADD_DONATION) FROM TB_REWARD_SUPPORT A INNER JOIN TB_REWARD_ITEM B USING (REWARD_ITEM_NO) WHERE C.REWARD_NO=B.REWARD_NO AND B.REWARD_ITEM_PRICE IS NOT NULL AND A.REWARD_SUPPORT_ADD_DONATION IS NOT NULL GROUP BY B.REWARD_NO)/REWARD_GOAL)*100),0) AS REWARD_ACHIEVEMENT_PERSENT,
		D.REWARD_CATEGORY_NAME 
		FROM TB_REWARD C INNER JOIN TB_REWARD_CATEGORY D ON C.REWARD_CATEGORY_NO=D.REWARD_CATEGORY_NO
		WHERE REWARD_STATE=4 ORDER BY REWARD_ENROLL_DATE DESC
	</select>
	
	<resultMap id="reward" type="com.spring.test.reward.model.vo.Reward">
		<result property="no" column="REWARD_NO"/>
		<result property="userNo" column="USER_NO"/>
		<result property="categoryNo" column="REWARD_CATEGORY_NO"/>
		<result property="deadline" column="REWARD_DEADLINE"/>
		<result property="name" column="REWARD_NAME"/>
		<result property="goal" column="REWARD_GOAL"/>
		<result property="shortName" column="REWARD_SHORT_NAME"/>
		<result property="synopsis" column="REWARD_SYNOPSIS"/>
		<result property="representImage" column="REWARD_REPRESENT_IMAGE"/>
		<result property="mcName" column="REWARD_MC_NAME"/>
		<result property="mcIntroduce" column="REWARD_MC_INTRODUCE"/>
		<result property="mcProfilePhoto" column="REWARD_MC_PROFILEPHOTO"/>
		<result property="mcURL1" column="REWARD_MC_URL1"/>
		<result property="mcURL2" column="REWARD_MC_URL2"/>
		<result property="mcURL3" column="REWARD_MC_URL3"/>
		<result property="storyMedia" column="REWARD_STORY_MEDIA"/>
		<result property="storyMediaType" column="REWARD_STORY_MEDIA_TYPE"/>
		<result property="bankbookPhoto" column="REWARD_BANKBOOK_PHOTO"/>
		<result property="preOpen" column="REWARD_PRE_OPEN"/>
		<collection property="itemList" column="REWARD_NO" select="selectRewardItem" />	
	</resultMap>
	
	<resultMap id="rewardItem" type="com.spring.test.reward.model.vo.RewardItem">
		<result property="rewardNo" column="REWARD_NO"/>
		<result property="no" column="REWARD_ITEM_NO"/>
		<result property="index" column="REWARD_ITEM_INDEX"/>
		<result property="name" column="REWARD_ITEM_NAME"/>
		<result property="introduce" column="REWARD_ITEM_INTRODUCE"/>
		<result property="needAddress" column="REWARD_ITEM_DELIVERY_ADDRESS"/>
		<result property="deliveryPrice" column="REWARD_ITEM_DELIVERY_PRICE"/>
		<result property="maxNum" column="REWARD_ITEM_MAX_NUM"/>
		<result property="remainNum" column="REWARD_ITEM_REMAIN_NUM"/>
		<result property="deliveryStart" column="REWARD_ITEM_DELIVERY_START"/>
		<result property="deliveryEnd" column="REWARD_ITEM_DELIVERY_END"/>
		<result property="price" column="REWARD_ITEM_PRICE"/>
		<collection property="selectOptionList" column="REWARD_ITEM_NO" select="selectRewardSelectOption" />	
		<collection property="inputOptionList" column="REWARD_ITEM_NO" select="selectRewardInputOption" />	
	</resultMap>
	
	<resultMap id="rewardItemSelectOption" type="com.spring.test.reward.model.vo.RewardItemSelectOption">
		<result property="no" column="REWARD_ITEM_SEL_OPTION_NO"/>
		<result property="rewardItemNo" column="REWARD_ITEM_NO"/>
		<result property="rewardNo" column="REWARD_NO"/>
		<result property="content" column="REWARD_ITEM_SEL_OPTION_CONTENT"/>
	</resultMap>
	
	<resultMap id="rewardItemInputOption" type="com.spring.test.reward.model.vo.RewardItemInputOption">
		<result property="no" column="REWARD_ITEM_IN_OPTION_NO"/>
		<result property="rewardItemNo" column="REWARD_ITEM_NO"/>
		<result property="rewardNo" column="REWARD_NO"/>
		<result property="content" column="REWARD_ITEM_IN_OPTION_CONTENT"/>
	</resultMap>
	
	
	
	
	<delete id="deleteRewardItem" parameterType="int">
		DELETE FROM TB_REWARD_ITEM WHERE REWARD_ITEM_NO = #{itemNo}
	</delete>

</mapper>
